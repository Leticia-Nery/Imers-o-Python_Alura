# -*- coding: utf-8 -*-
"""AULA 2 - PYTHON - ALURA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ndv2NQDDaLWFlwh-MHsfdHnxItBWhGE9

AULA 2 - PYTHON - ALURA - CONTA 2
"""

import pandas as pd
import plotly.express as px

df_principal = pd.read_excel("/content/acoes_pura.xlsx", sheet_name="Principal")
df_principal.head(10)

df_total_acoes = pd.read_excel("/content/acoes_pura.xlsx", sheet_name="Total_de_acoes")
df_total_acoes

df_Ticker = pd.read_excel("/content/acoes_pura.xlsx", sheet_name="Ticker")
df_Ticker

df_GEMINI = pd.read_excel("/content/acoes_pura.xlsx", sheet_name="GEMINI")
df_GEMINI

df_principal = df_principal[['Ativo',	'Data',	'Último (R$)','Var. Dia (%)']].copy()
df_principal

df_principal = df_principal.rename(columns={'Último (R$)':'valor_final','Var. Dia (%)':'var_dia_pct'}).copy()
df_principal

df_principal['Var_pct'] = df_principal['var_dia_pct']/100
df_principal['valor_inicial'] = df_principal['valor_final']/(df_principal['Var_pct'] + 1)
df_principal

df_principal = df_principal.merge(df_total_acoes, left_on= 'Ativo', right_on= 'Código', how='left')
df_principal

df_principal = df_principal.drop(columns=['Código'])
df_principal

df_principal['Variacao_rs'] = (df_principal['valor_final'] - df_principal['valor_inicial'])*df_principal['Qtde. Teórica']
df_principal

pd.options.display.float_format = '{:.2f}'.format

df_principal['Qtde. Teórica'] = df_principal['Qtde. Teórica'].astype(int)
df_principal

df_principal = df_principal.rename(columns={'Qtde. Teórica':'Qtd_teorica'}).copy()
df_principal

df_principal['Resultado'] = df_principal['Variacao_rs'].apply(lambda x:'Subiu' if x > 0 else ('Desceu' if x < 0 else "Estável"))
df_principal

df_principal = df_principal.merge(df_Ticker, left_on= 'Ativo', right_on= 'Ticker', how='left')
df_principal = df_principal.drop(columns=['Ticker'])
df_principal

df_principal = df_principal.merge(df_GEMINI, left_on= 'Nome', right_on= 'Nome da Empresa', how='left')
df_principal

print(df_principal.columns)

df_principal['Cat_idade'] = df_principal['Idade (anos)'].apply(lambda x: "Mais de 100 anos" if x > 100 else ("Menos de 50 anos" if x < 50 else "Entre 50 e 100 anos"))
df_principal

# Calcular o maior valor
maior = df_principal['Variacao_rs'].max()

# Calcular o menor valor
menor = df_principal['Variacao_rs'].min()

# Calcular a média
media = df_principal['Variacao_rs'].mean()

# Filtrar os dados para calcular a média de quem subiu
media_subiu = df_principal[df_principal['Resultado'] == 'Subiu']['Variacao_rs'].mean()

# Filtrar os dados para calcular a média de quem desceu
media_desceu = df_principal[df_principal['Resultado'] == 'Desceu']['Variacao_rs'].mean()

# Exibir os resultados
print("Maior:\t", maior)
print("Menor:\t", menor)
print("Média:\t", media)
print("Média de quem subiu:\t", media_subiu)
print("Média de quem desceu:\t", media_desceu)

df_principal_subiu = df_principal[df_principal['Resultado'] == 'Subiu']
df_principal_subiu

df_analise_segmento = df_principal_subiu.groupby('Segmento')['Variacao_rs'].sum().reset_index()
df_analise_segmento

fig = px.pie(df_analise_segmento, names='Segmento', values='Variacao_rs')

fig.show()

df_analise_saldo = df_principal.groupby('Resultado')['Variacao_rs'].sum().reset_index()
df_analise_saldo

y= df_analise_saldo['Variacao_rs']
formatted_y = [f'R$ {val:,.2f}' for val in y]

fig = px.bar(df_analise_saldo, x='Resultado', y= 'Variacao_rs', text= formatted_y, title= 'Variação Reais por Resultado')
fig.show()

df_analise_fx_etaria = df_principal.groupby('Segmento')['Variacao_rs'].sum().reset_index()
df_analise_fx_etaria

fig = px.bar(df_analise_fx_etaria, x='Variacao_rs', y='Segmento', text='Segmento', title='Variação R$ x Por faixa etária')
fig.show()